// <auto-generated />
using System;
using Formulario.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Form_Cad_Clientes_v2._0.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Formulario.Core.Models.Cidades", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Cidades", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Estado = "SP",
                            Nome = "São Paulo"
                        },
                        new
                        {
                            Id = 2L,
                            Estado = "RJ",
                            Nome = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 3L,
                            Estado = "MG",
                            Nome = "Belo Horizonte"
                        },
                        new
                        {
                            Id = 4L,
                            Estado = "PR",
                            Nome = "Curitiba"
                        },
                        new
                        {
                            Id = 5L,
                            Estado = "RS",
                            Nome = "Porto Alegre"
                        },
                        new
                        {
                            Id = 6L,
                            Estado = "BA",
                            Nome = "Salvador"
                        },
                        new
                        {
                            Id = 7L,
                            Estado = "PE",
                            Nome = "Recife"
                        },
                        new
                        {
                            Id = 8L,
                            Estado = "CE",
                            Nome = "Fortaleza"
                        },
                        new
                        {
                            Id = 9L,
                            Estado = "DF",
                            Nome = "Brasília"
                        },
                        new
                        {
                            Id = 10L,
                            Estado = "GO",
                            Nome = "Goiânia"
                        },
                        new
                        {
                            Id = 11L,
                            Estado = "AM",
                            Nome = "Manaus"
                        },
                        new
                        {
                            Id = 12L,
                            Estado = "PA",
                            Nome = "Belém"
                        },
                        new
                        {
                            Id = 13L,
                            Estado = "ES",
                            Nome = "Vitória"
                        },
                        new
                        {
                            Id = 14L,
                            Estado = "SC",
                            Nome = "Florianópolis"
                        },
                        new
                        {
                            Id = 15L,
                            Estado = "RN",
                            Nome = "Natal"
                        },
                        new
                        {
                            Id = 16L,
                            Estado = "PB",
                            Nome = "João Pessoa"
                        },
                        new
                        {
                            Id = 17L,
                            Estado = "PI",
                            Nome = "Teresina"
                        },
                        new
                        {
                            Id = 18L,
                            Estado = "MS",
                            Nome = "Campo Grande"
                        },
                        new
                        {
                            Id = 19L,
                            Estado = "MT",
                            Nome = "Cuiabá"
                        },
                        new
                        {
                            Id = 20L,
                            Estado = "MA",
                            Nome = "São Luís"
                        },
                        new
                        {
                            Id = 21L,
                            Estado = "TO",
                            Nome = "Palmas"
                        },
                        new
                        {
                            Id = 22L,
                            Estado = "RR",
                            Nome = "Boa Vista"
                        },
                        new
                        {
                            Id = 23L,
                            Estado = "AP",
                            Nome = "Macapá"
                        },
                        new
                        {
                            Id = 24L,
                            Estado = "RO",
                            Nome = "Porto Velho"
                        },
                        new
                        {
                            Id = 25L,
                            Estado = "AC",
                            Nome = "Rio Branco"
                        },
                        new
                        {
                            Id = 26L,
                            Estado = "TO",
                            Nome = "Araguaína"
                        },
                        new
                        {
                            Id = 27L,
                            Estado = "AL",
                            Nome = "Arapiraca"
                        });
                });

            modelBuilder.Entity("Formulario.Core.Models.Clientes", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<long>("CidadeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Codigo");

                    b.HasIndex("CidadeId");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Formulario.Core.Models.Clientes", b =>
                {
                    b.HasOne("Formulario.Core.Models.Cidades", "Cidade")
                        .WithMany("Clientes")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Formulario.Core.Models.Cidades", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
