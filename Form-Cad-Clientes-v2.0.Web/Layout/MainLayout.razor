@inherits LayoutComponentBase

<MudThemeProvider 
@bind-IsDarkMode="_isDarkMode" 
@ref="_mudThemeProvider"
Theme="Configuration.Theme"/>
<MudSnackbarProvider />
<MudDialogProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
         OnClick="ToggleDrawer"
          Color="Color.Inherit"
          Edge="Edge.Start"/>
        <h3>Formulário de Cadastro de Clientes Prime Tech</h3>
        <MudSpacer />
        <MudText Typo="Typo.caption">
           Nome de usuario logado @* @context.User.Identity?.Name *@
        </MudText>
        <MudSwitch
            Color="Color.Inherit"
            @bind-Value="_isDarkMode"
            Class="ma-4" 
            T="bool"
            ThumbIcon="@Icons.Material.TwoTone.Lightbulb"/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_isDrawerOpened">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _isDrawerOpened = false;
    private bool _isDarkMode = false;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }
    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDrawer()
        => _isDrawerOpened = !_isDrawerOpened;
}