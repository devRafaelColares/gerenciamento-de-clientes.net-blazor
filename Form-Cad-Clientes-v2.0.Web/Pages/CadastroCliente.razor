@page "/cadastro"
@using System.Text.RegularExpressions

<MudPaper Class="pa-4">
    <MudPaper Class="mud-width-full pa-6 mb-8" Elevation="2">
        @if (showForm)
        {
            <MudForm @ref="form" @bind-IsValid="isValid" Validated="ValidateForm">
                <MudTextField 
                    Label="Nome" @bind-Value="cliente.Nome" 
                    Required="true"
                    RequiredError="O campo 'Nome' é obrigatório!"
                    T="string"
                />

                <MudTextField 
                    Label="Telefone" @bind-Value="cliente.Telefone" 
                    Required="true"
                    RequiredError="O campo 'Telefone' é obrigatório!"
                    T="string"
                    MaxLength="14"
                    Placeholder="(99) 99999-9999"
                    ValueChanged="OnTelefoneChanged"
                    @bind-Value:event="oninput"
                />

                @if (!string.IsNullOrEmpty(_phoneError))
                {
                    <MudText Typo="Typo.body2" Color="Color.Error">@_phoneError</MudText>
                }

                <MudTextField 
                    Label="Foto" @bind-Value="cliente.Foto" 
                    Required="true"
                    RequiredError="A foto é obrigatória!"
                    T="string"
                />

                <MudSelect 
                    Label="Sexo" @bind-Value="cliente.Sexo" 
                    Required="true"
                    RequiredError="O campo 'Sexo' é obrigatório!"
                    T="string"
                >
                    <MudSelectItem Value="@("Masculino")">Masculino</MudSelectItem>
                    <MudSelectItem Value="@("Feminino")">Feminino</MudSelectItem>
                </MudSelect>

                <MudSelect 
                    Label="Estado" @bind-Value="cliente.Cidade.Estado" 
                    Required="true"
                    RequiredError="O campo 'Estado' é obrigatório!"
                    T="string"
                >
                    <MudSelectItem Value="@("AC")">AC</MudSelectItem>
                    <MudSelectItem Value="@("AL")">AL</MudSelectItem>
                    <MudSelectItem Value="@("AP")">AP</MudSelectItem>
                    <MudSelectItem Value="@("AM")">AM</MudSelectItem>
                    <MudSelectItem Value="@("BA")">BA</MudSelectItem>
                    <MudSelectItem Value="@("CE")">CE</MudSelectItem>
                    <MudSelectItem Value="@("DF")">DF</MudSelectItem>
                    <MudSelectItem Value="@("ES")">ES</MudSelectItem>
                    <MudSelectItem Value="@("GO")">GO</MudSelectItem>
                    <MudSelectItem Value="@("MA")">MA</MudSelectItem>
                    <MudSelectItem Value="@("MT")">MT</MudSelectItem>
                    <MudSelectItem Value="@("MS")">MS</MudSelectItem>
                    <MudSelectItem Value="@("MG")">MG</MudSelectItem>
                    <MudSelectItem Value="@("PA")">PA</MudSelectItem>
                    <MudSelectItem Value="@("PB")">PB</MudSelectItem>
                    <MudSelectItem Value="@("PR")">PR</MudSelectItem>
                    <MudSelectItem Value="@("PE")">PE</MudSelectItem>
                    <MudSelectItem Value="@("PI")">PI</MudSelectItem>
                    <MudSelectItem Value="@("RJ")">RJ</MudSelectItem>
                    <MudSelectItem Value="@("RN")">RN</MudSelectItem>
                    <MudSelectItem Value="@("RS")">RS</MudSelectItem>
                    <MudSelectItem Value="@("RO")">RO</MudSelectItem>
                    <MudSelectItem Value="@("RR")">RR</MudSelectItem>
                    <MudSelectItem Value="@("SC")">SC</MudSelectItem>
                    <MudSelectItem Value="@("SP")">SP</MudSelectItem>
                    <MudSelectItem Value="@("SE")">SE</MudSelectItem>
                    <MudSelectItem Value="@("TO")">TO</MudSelectItem>
                </MudSelect>

                <MudAutocomplete T="string" Label="Cidade" @bind-Value="cliente.Cidade.Nome"
                    SearchFunc="@SearchCidades"
                    MaxItems="10"
                    Required="true" RequiredError="O campo 'Cidade' é obrigatório!"
                    ResetValueOnEmptyText="true"
                    CoerceText="true" CoerceValue="true" />

                <MudSpacer />
            </MudForm>
            <MudButton 
                OnClick="Salvar" 
                Disabled="@(!isValid)"
                Variant="Variant.Filled" 
                StartIcon="@Icons.Material.Filled.Save" 
                Color="Color.Info" 
                Size="Size.Small" >Salvar
            </MudButton>
        }
    </MudPaper>
</MudPaper>

@code {
    private Cliente cliente = new Cliente();
    private MudForm form;
    private bool isValid;
    private bool showForm = true;
    private string _errorMessage = string.Empty;
    private string _phoneError = string.Empty;

    private List<string> cidades = CidadesBrasil.Cidades;

    private async Task Salvar()
    {
        if (isValid)
        {
            var sucesso = await ClientesService.SalvarCliente(cliente);

            if (sucesso)
            {
                NavigationManager.NavigateTo("/clientes");
            }
            else
            {
                _errorMessage = "Erro ao salvar cliente.";
            }
        }
    }

    private void OnTelefoneChanged(string newValue)
    {
        var digitsOnly = new string(newValue.Where(char.IsDigit).ToArray());
        if (digitsOnly.Length > 11 || digitsOnly.Length < 11)
        {
            _phoneError = "O telefone deve ter 11 dígitos.";
        }

        else
        {
            cliente.Telefone = $"({digitsOnly.Substring(0, 2)}) {digitsOnly.Substring(2, 5)}-{digitsOnly.Substring(7)}";
            _phoneError = string.Empty;
        }
    }

    private Task<IEnumerable<string>> SearchCidades(string searchText)
    {
        var result = cidades.Where(c => c.Contains(searchText, StringComparison.OrdinalIgnoreCase)).ToList();
        return Task.FromResult(result.AsEnumerable());
    }
}
